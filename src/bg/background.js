// Generated by CoffeeScript 1.6.3
var ports, requestDomFlags, updateContextMenus,
  __hasProp = {}.hasOwnProperty;

updateContextMenus = function(flags, port) {
  var key, onClickHandler, value, _results;
  onClickHandler = function(info, tab) {
    return port.postMessage({
      name: "contextMenuClick",
      key: info.menuItemId,
      tab: tab
    });
  };
  if (flags.length > 0) {
    _results = [];
    for (key in flags) {
      if (!__hasProp.call(flags, key)) continue;
      value = flags[key];
      _results.push(chrome.contextMenus.create({
        title: value,
        id: "" + key,
        contexts: ['all'],
        onclick: onClickHandler
      }));
    }
    return _results;
  }
};

requestDomFlags = function(tabs, port) {
  return chrome.tabs.sendMessage(tabs[0].id, "Give me domflags", function(response) {
    if (response) {
      return updateContextMenus(response.flags, port);
    }
  });
};

ports = [];

chrome.runtime.onConnect.addListener(function(port) {
  var tabChange;
  if (port.name !== "devtools") {
    return;
  }
  port.onMessage.addListener(function(msg) {
    return chrome.tabs.query({
      lastFocusedWindow: true,
      active: true
    }, function(tabs) {
      var tabPort;
      ports[tabs[0].id] = {
        port: port,
        portId: port.portId_,
        tab: tabs[0].id
      };
      tabPort = ports[tabs[0].id].port;
      return requestDomFlags(tabs, tabPort);
    });
  });
  tabChange = function() {
    return chrome.tabs.query({
      lastFocusedWindow: true,
      active: true
    }, function(tabs) {
      var tabPort;
      if (ports[tabs[0].id]) {
        tabPort = ports[tabs[0].id].port;
        return requestDomFlags(tabs, tabPort);
      }
    });
  };
  port.onDisconnect.addListener(function(port) {
    chrome.contextMenus.removeAll();
    chrome.tabs.onActivated.removeListener(tabChange);
    return chrome.tabs.query({
      lastFocusedWindow: true,
      active: true
    }, function(tabs) {
      return delete ports[tabs[0].id];
    });
  });
  return chrome.tabs.onActivated.addListener(tabChange);
});

chrome.tabs.onActivated.addListener(function(activeInfo) {
  return chrome.contextMenus.removeAll();
});
