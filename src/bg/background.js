// Generated by CoffeeScript 1.6.3
(function() {
  var connections, onClickHandler;

  console.log("background.js");

  connections = {};

  chrome.runtime.onConnect.addListener(function(port) {
    var extensionListener;
    extensionListener = function(message, sender, sendResponse) {
      if (message.name === "init") {
        connections[message.tabId] = port;
      }
    };
    port.onMessage.addListener(extensionListener);
    return port.onDisconnect.addListener(function(port) {
      var i, len, tabs, _results;
      port.onMessage.removeListener(extensionListener);
      tabs = Object.keys(connections);
      i = 0;
      len = tabs.length;
      _results = [];
      while (i < len) {
        if (connections[tabs[i]] === port) {
          delete connections[tabs[i]];
          break;
        }
        _results.push(i++);
      }
      return _results;
    });
  });

  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
    var tabId;
    if (sender.tab) {
      tabId = sender.tab.id;
      if (tabId in connections) {
        connections[tabId].postMessage(request);
      } else {
        console.log("Tab not found in connection list.");
      }
    } else {
      console.log("sender.tab not defined.");
    }
    return true;
  });

  onClickHandler = function(info, tab) {
    if (info.menuItemId === "radio1" || info.menuItemId === "radio2") {
      return console.log("radio item " + info.menuItemId + " was clicked (previous checked state was " + info.wasChecked + ")");
    } else if (info.menuItemId === "checkbox1" || info.menuItemId === "checkbox2") {
      console.log(JSON.stringify(info));
      return console.log("checkbox item " + info.menuItemId + " was clicked, state is now: " + info.checked + " (previous state was " + info.wasChecked + ")");
    } else {
      console.log("item " + info.menuItemId + " was clicked");
      console.log("info: " + JSON.stringify(info));
      return console.log("tab: " + JSON.stringify(tab));
    }
  };

  chrome.contextMenus.onClicked.addListener(onClickHandler);

  chrome.runtime.onInstalled.addListener(function() {
    var context, contexts, i, id, title;
    contexts = ["page", "selection", "link", "editable", "image", "video", "audio"];
    i = 0;
    while (i < contexts.length) {
      context = contexts[i];
      title = "Test '" + context + "' menu item";
      id = chrome.contextMenus.create({
        title: title,
        contexts: [context],
        id: "context" + context
      });
      console.log("'" + context + "' item:" + id);
      i++;
    }
    chrome.contextMenus.create({
      title: "Test parent item",
      id: "parent"
    });
    chrome.contextMenus.create({
      title: "Child 1",
      parentId: "parent",
      id: "child1"
    });
    chrome.contextMenus.create({
      title: "Child 2",
      parentId: "parent",
      id: "child2"
    });
    console.log("parent child1 child2");
    chrome.contextMenus.create({
      title: "Radio 1",
      type: "radio",
      id: "radio1"
    });
    chrome.contextMenus.create({
      title: "Radio 2",
      type: "radio",
      id: "radio2"
    });
    console.log("radio1 radio2");
    chrome.contextMenus.create({
      title: "Checkbox1",
      type: "checkbox",
      id: "checkbox1"
    });
    chrome.contextMenus.create({
      title: "Checkbox2",
      type: "checkbox",
      id: "checkbox2"
    });
    console.log("checkbox1 checkbox2");
    console.log(document.body);
    console.log("About to try creating an invalid item - an error about " + "duplicate item child1 should show up");
    return chrome.contextMenus.create({
      title: "Oops",
      id: "child1"
    }, function() {
      if (chrome.extension.lastError) {
        return console.log("Got expected error: " + chrome.extension.lastError.message);
      }
    });
  });

}).call(this);
